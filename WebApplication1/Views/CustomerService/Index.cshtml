@using MotoCross.Json;
@using Questionary.Web.Areas.Admin.ViewModels.AdminViewModel;
@model AdminCustomerServiceViewModel;
@{
    ViewData["Title"] = "Список Услуг";
}



<div class="container my-5">
    <h1 class="personal_area_h1">Услуги</h1>
    <div class=" " style="display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 1em;
  
    margin-right: 0px;
    margin-left: 0px;">
       
    @foreach (var item in Model.Customers)
            {
            <div class="card" style="width: 18rem; 
    ">
            @if (item?.Photo != null)
            {
                    <img src="@item.BasePhoto64" class="card-img-top" style="height: 100%;" alt="">
            }
            else
            {
                    <img src="" class="card-img-top" style="height: 100%;" alt="">
            }
        
        <div class="card-body" style="text-align: center;">
                <h5 class="card-title">@item.Name</h5>
                <p class="card-text">@item.Price.ToString("C")</p>
        </div>
        
        <div class="card-body">
                   
                    <button class="button_on_personal_area" onclick="myFunction(@item.Id)">Добавить в заказ</button>
        </div>
    </div>

    }
    
    </div>
</div>
<script>
    function myFunction(id) {
        if (id === null) {
            alert('id заказа null');
            return;
        }
        var url = "@Url.Action("Addorder", "CustomerService")" + "?customerId=" + id;
        console.log(url);
        $.ajax({
            url: url,
            dataType: 'json',
            type: "post",
            async: false,
            success: function (response) {
                console.log(response);
                switch (response.status) {
                    case parseInt('@((int)JsonResponseStatuses.Ok)'): {
                        alert(response.message);
                        setTimeout(function () {
                            window.location.reload();
                        }, 500);
                        break;
                    }

                    case parseInt('@((int)JsonResponseStatuses.NotFound)'): {
                        alert(response.message);
                        break;
                    }
                    case parseInt('@((int)JsonResponseStatuses.Error)'): {
                        alert("Ошибка подверждения заказа!");
                        break;
                    }
                }
            }
        });
    }
</script>
